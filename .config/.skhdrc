#         __   __        __         
#   _____/ /__/ /_  ____/ /_________
#  / ___/ //_/ __ \/ __  / ___/ ___/
# (__  ) ,< / / / / /_/ / /  / /__  
#/____/_/|_/_/ /_/\__,_/_/   \___/  

cmd - return : open /Applications/Alacritty.app
cmd + shift - return : open -na /Applications/Alacritty.app
# TODO: firefox opens in the current existing firefox window desktop
# make a function that saves current workspace, opens a new ff window and moves it to the current workspace
# cmd + shift - 3 : open -nFg "/Applications/Firefox Developer Edition.app"

# Navigation
alt - h : yabai -m window --focus west
alt - j : yabai -m window --focus south
alt - k : yabai -m window --focus north
alt - l : yabai -m window --focus east

# Moving windows
shift + alt - h : yabai -m window --warp west
shift + alt - j : yabai -m window --warp south
shift + alt - k : yabai -m window --warp north
shift + alt - l : yabai -m window --warp east

# Move between spaces
# cmd + shift - 1 : yabai -m space --focus 1
# cmd + shift - 2 : yabai -m space --focus 2
# cmd + shift - 3 : yabai -m space --focus 3
# cmd + shift - 4 : yabai -m space --focus 4

# Move focus container to workspace
# shift + alt - m : yabai -m window --space last; yabai -m space --focus last
# TODO: if space is last then create new space
shift + alt - n : yabai -m window --space prev; yabai -m space --focus prev
shift + alt - m : yabai -m window --space next; yabai -m space --focus next
# TODO if we are already in the first space then focus the last space
alt - n : yabai -m space --focus prev
# TODO if we are already in the last space then focus the first space
alt - m : yabai -m space --focus next

# TODO: not only move but create space if it doesn't exist
shift + alt - 1 : yabai -m window --space 1; yabai -m space --focus 1
shift + alt - 2 : yabai -m window --space 2; yabai -m space --focus 2
shift + alt - 3 : yabai -m window --space 3; yabai -m space --focus 3
shift + alt - 4 : yabai -m window --space 4; yabai -m space --focus 4
shift + alt - 5 : yabai -m window --space 5; yabai -m space --focus 5

# rcmd - 1 : ( yabai -m query --windows | jq -er 'map(select(.app == "Alacritty"))[0].space' ) | xargs -I{} yabai -m space --focus {}
# rcmd - 2 : ( yabai -m query --windows | jq -er 'map(select(.app == "Code"))[0].space' ) | xargs -I{} yabai -m space --focus {}
# rcmd - 3 : ( yabai -m query --windows | jq -er 'map(select(.app == "Firefox Developer Edition"))[0].space' ) | xargs -I{} yabai -m space --focus {}
# cmd - 0 : ( yabai -m query --windows | jq -er 'map(select(.app == "Microsoft Teams"))[0] | .space, .id' ) | xargs -n 2 bash -c 'yabai -m space --focus $0; yabai -m window --focus $1'
# cmd - 9 : ( yabai -m query --windows | jq -er 'map(select(.app == "Slack"))[0] | .space, .id' ) | xargs -n 2 bash -c 'yabai -m space --focus $0; yabai -m window --focus $1'

# TODO: when switching to space that doesn't exist, create it and focus it (create only the next available: e.g 1,2 exist and I switch to 4, then create 3 and focus it)
# TODO: when leaving a space, if it's empty, delete it ?
cmd - 1 : yabai -m space --focus 1
cmd - 2 : yabai -m space --focus 2
cmd - 3 : yabai -m space --focus 3
cmd - 4 : yabai -m space --focus 4
cmd - 5 : yabai -m space --focus 5
cmd - 6 : yabai -m space --focus 6
cmd - 7 : yabai -m space --focus 7
cmd - 8 : yabai -m space --focus 8

# TODO: focus mode that opens alacritty, vscode and firefox in fullscreen
# TODO: cmd 8+7 - mail/calendar
# TODO: cmd+ralt+- = mission control
# TODO: show desktop
# TODO: if app insn't open, open it
# Add space to draw (gimp or excalidraw)

# Resize windows
lctrl + alt - h : yabai -m window --resize left:-50:0; \
                  yabai -m window --resize right:-50:0
lctrl + alt - j : yabai -m window --resize bottom:0:50; \
                  yabai -m window --resize top:0:50
lctrl + alt - k : yabai -m window --resize top:0:-50; \
                  yabai -m window --resize bottom:0:-50
lctrl + alt - l : yabai -m window --resize right:50:0; \
                  yabai -m window --resize left:50:0

# Equalize size of windows
lctrl + alt - e : yabai -m space --balance

# Enable / Disable gaps in current workspace
lctrl + alt - g : yabai -m space --toggle padding; yabai -m space --toggle gap

# Rotate windows clockwise and anticlockwise
alt - r         : yabai -m space --rotate 270
shift + alt - r : yabai -m space --rotate 90

# Rotate on X and Y Axis
shift + alt - x : yabai -m space --mirror x-axis
shift + alt - y : yabai -m space --mirror y-axis

# Set insertion point for focused container
shift + lctrl + alt - h : yabai -m window --insert west
shift + lctrl + alt - j : yabai -m window --insert south
shift + lctrl + alt - k : yabai -m window --insert north
shift + lctrl + alt - l : yabai -m window --insert east

# Float / Unfloat window
shift + alt - space : \
    yabai -m window --toggle float; \
    yabai -m window --toggle border

# TODO: improve this, maybe a bash function to toggle between on and off if there's no builtin toggle in yabai already
lctrl + alt - space : yabai -m config window_border on
cmd + alt - space : yabai -m config window_border off

# Restart Yabai
shift + lctrl + alt - r : \
    /usr/bin/env osascript <<< \
        "display notification \"Restarting Yabai\" with title \"Yabai\""; \
    launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"

# Make window native fullscreen
alt - f         : yabai -m window --toggle zoom-fullscreen
# shift + alt - f : yabai -m window --toggle native-fullscreen

# alt - d : yabai -m window --toggle zoom-parent
# alt - f : yabai -m window --toggle zoom-fullscreen

alt - x : yabai -m window --close

# firefox workaround
# cmd - l : skhd --key "f6"
cmd - l [
    *             ~
    "Firefox Developer Edition" : skhd --key "f6"
]

# dismiss notification
alt - q : pkill NotificationCenter

# Toggle DND
alt - d : macos-focus-mode enable
alt + shift - d : macos-focus-mode disable

# create/delete spaces
ctrl + alt - n : yabai -m space --create; yabai -m space --focus last
ctrl + alt - d : cid=$(yabai -m query --spaces | jq -er 'map(select(."has-focus" == true))[0].index'); yabai -m space --destroy; yabai -m query --spaces | jq -re --arg cid $cid '.[] | select(.index == ($cid | tonumber))' >/dev/null && yabai -m space --focus $cid || yabai -m space --focus $(($cid-1))

# lock
ctrl + cmd - l : osascript -e 'tell application "System Events" to keystroke "q" using {control down, command down}'
# sleep
ctrl + cmd - s : pmset displaysleepnow

# TODO: toggle between spacebar top and bottom
# alt - p : yabai -m config top_padding 0; yabai -m config bottom_padding 10; yabai -m config top_padding 30; yabai -m config bottom_padding 30

# TODO: demo/share mode 
# remove background on all spaces, dnd on, etc

# TODO: focus mode
# alac, code, ff native fullscreen, dnd on, hide next-meeting, etc

# disable macos default hide/minimize
cmd - h : skhd -k ""
cmd - m : skhd -k ""
ctrl - m : skhd -k ""

# todo: caps lock to ctrl (currently done in karabiner)